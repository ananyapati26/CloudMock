// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  // output   = "../generated/prisma"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id       String    @id @default(auto()) @map("_id") @db.ObjectId
  email    String    @unique
  name     String?
  password String
  projects Project[]
}

model Project {
  id          String       @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  desc       String?
  slug        String       @unique
  userId      String       @db.ObjectId
  user        User         @relation(fields: [userId], references: [id])
  collections Collection[]
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
}

model Collection {
  id        String     @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  desc      String?
  path      String
  projectId String     @db.ObjectId
  project   Project    @relation(fields: [projectId], references: [id])
  endpoints Endpoint[]
  baseData  Json?
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt

  @@unique([projectId, path])
}

model Endpoint {
  id           String     @id @default(auto()) @map("_id") @db.ObjectId
  collectionId String     @db.ObjectId
  collection   Collection @relation(fields: [collectionId], references: [id])
  method       HttpMethod
  statusCode   Int?
  delay        Int?
  response     Json?
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt

  @@unique([collectionId, method])
}

enum HttpMethod {
  GET
  POST
  PUT
  PATCH
  DELETE
}
